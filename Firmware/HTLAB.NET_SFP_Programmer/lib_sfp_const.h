#ifndef LIB_SFP_CONST_H
#define LIB_SFP_CONST_H

// SFP_IDENTIFIER (SFF-8024 Rev 4.7)
// SFP_EXTENDED_IDENTIFIER (SFF-8472 Rev 12.3)
// SFP_CONNECTOR (SFF-8024 Rev 4.7)
// SFP_COMPLIANCE_CODE (SFF-8472 Rev 12.3)
// SFP_ENCODING (SFF-8024 Rev 4.7)
// SFP_RATE_IDENTIFIER (SFF-8472 Rev 12.3)
// SFP_EXTENDED_COMPLIANCE_CODE (SFF-8024 Rev 4.7)
// SFP_OPTION (SFF-8472 Rev 12.3)


static const char * SFP_IDENTIFIER[256] = {
/* 0x00 */  "Unknown",
/* 0x01 */  "GBIC",
/* 0x02 */  "Module/connector soldered to motherboard",
/* 0x03 */  "SFP/SFP+/SFP28 and later",
/* 0x04 */  "300 pin XBI",
/* 0x05 */  "XENPAK",
/* 0x06 */  "XFP",
/* 0x07 */  "XFF",
/* 0x08 */  "XFP-E",
/* 0x09 */  "XPAK",
/* 0x0A */  "X2",
/* 0x0B */  "DWDM-SFP/SFP+",
/* 0x0C */  "QSFP",
/* 0x0D */  "QSFP+ or later",
/* 0x0E */  "CXP or later",
/* 0x0F */  "Shielded Mini Multilane HD 4X",
/* 0x10 */  "Shielded Mini Multilane HD 8X",
/* 0x11 */  "QSFP28 or later",
/* 0x12 */  "CXP2 (aka CXP28) or later",
/* 0x13 */  "CDFP (Style 1/Style2)",
/* 0x14 */  "Shielded Mini Multilane HD 4X Fanout Cable",
/* 0x15 */  "Shielded Mini Multilane HD 8X Fanout Cable",
/* 0x16 */  "CDFP (Style 3)",
/* 0x17 */  "microQSFP",
/* 0x18 */  "QSFP-DD Double Density 8X Pluggable Transceiver",
/* 0x19 */  "OSFP 8X Pluggable Transceiver",
/* 0x1A */  "SFP-DD Double Density 2X Pluggable Transceiver",
/* 0x1B */  "DSFP Dual Small Form Factor Pluggable Transceiver",
/* 0x1C */  "x4 MiniLink/OcuLink",
/* 0x1D */  "x8 MiniLink",
/* 0x1E */  "QSFP+ or later with Common Management Interface Specification (CMIS)",
/* 0x1F */  "Unallocated",
/* 0x20 */  "Unallocated",
/* 0x21 */  "Unallocated",
/* 0x22 */  "Unallocated",
/* 0x23 */  "Unallocated",
/* 0x24 */  "Unallocated",
/* 0x25 */  "Unallocated",
/* 0x26 */  "Unallocated",
/* 0x27 */  "Unallocated",
/* 0x28 */  "Unallocated",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Unallocated",
/* 0x31 */  "Unallocated",
/* 0x32 */  "Unallocated",
/* 0x33 */  "Unallocated",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "Unallocated",
/* 0x41 */  "Unallocated",
/* 0x42 */  "Unallocated",
/* 0x43 */  "Unallocated",
/* 0x44 */  "Unallocated",
/* 0x45 */  "Unallocated",
/* 0x46 */  "Unallocated",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "Unallocated",
/* 0x51 */  "Unallocated",
/* 0x52 */  "Unallocated",
/* 0x53 */  "Unallocated",
/* 0x54 */  "Unallocated",
/* 0x55 */  "Unallocated",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Vendor specific",
/* 0x81 */  "Vendor specific",
/* 0x82 */  "Vendor specific",
/* 0x83 */  "Vendor specific",
/* 0x84 */  "Vendor specific",
/* 0x85 */  "Vendor specific",
/* 0x86 */  "Vendor specific",
/* 0x87 */  "Vendor specific",
/* 0x88 */  "Vendor specific",
/* 0x89 */  "Vendor specific",
/* 0x8A */  "Vendor specific",
/* 0x8B */  "Vendor specific",
/* 0x8C */  "Vendor specific",
/* 0x8D */  "Vendor specific",
/* 0x8E */  "Vendor specific",
/* 0x8F */  "Vendor specific",
/* 0x90 */  "Vendor specific",
/* 0x91 */  "Vendor specific",
/* 0x92 */  "Vendor specific",
/* 0x93 */  "Vendor specific",
/* 0x94 */  "Vendor specific",
/* 0x95 */  "Vendor specific",
/* 0x96 */  "Vendor specific",
/* 0x97 */  "Vendor specific",
/* 0x98 */  "Vendor specific",
/* 0x99 */  "Vendor specific",
/* 0x9A */  "Vendor specific",
/* 0x9B */  "Vendor specific",
/* 0x9C */  "Vendor specific",
/* 0x9D */  "Vendor specific",
/* 0x9E */  "Vendor specific",
/* 0x9F */  "Vendor specific",
/* 0xA0 */  "Vendor specific",
/* 0xA1 */  "Vendor specific",
/* 0xA2 */  "Vendor specific",
/* 0xA3 */  "Vendor specific",
/* 0xA4 */  "Vendor specific",
/* 0xA5 */  "Vendor specific",
/* 0xA6 */  "Vendor specific",
/* 0xA7 */  "Vendor specific",
/* 0xA8 */  "Vendor specific",
/* 0xA9 */  "Vendor specific",
/* 0xAA */  "Vendor specific",
/* 0xAB */  "Vendor specific",
/* 0xAC */  "Vendor specific",
/* 0xAD */  "Vendor specific",
/* 0xAE */  "Vendor specific",
/* 0xAF */  "Vendor specific",
/* 0xB0 */  "Vendor specific",
/* 0xB1 */  "Vendor specific",
/* 0xB2 */  "Vendor specific",
/* 0xB3 */  "Vendor specific",
/* 0xB4 */  "Vendor specific",
/* 0xB5 */  "Vendor specific",
/* 0xB6 */  "Vendor specific",
/* 0xB7 */  "Vendor specific",
/* 0xB8 */  "Vendor specific",
/* 0xB9 */  "Vendor specific",
/* 0xBA */  "Vendor specific",
/* 0xBB */  "Vendor specific",
/* 0xBC */  "Vendor specific",
/* 0xBD */  "Vendor specific",
/* 0xBE */  "Vendor specific",
/* 0xBF */  "Vendor specific",
/* 0xC0 */  "Vendor specific",
/* 0xC1 */  "Vendor specific",
/* 0xC2 */  "Vendor specific",
/* 0xC3 */  "Vendor specific",
/* 0xC4 */  "Vendor specific",
/* 0xC5 */  "Vendor specific",
/* 0xC6 */  "Vendor specific",
/* 0xC7 */  "Vendor specific",
/* 0xC8 */  "Vendor specific",
/* 0xC9 */  "Vendor specific",
/* 0xCA */  "Vendor specific",
/* 0xCB */  "Vendor specific",
/* 0xCC */  "Vendor specific",
/* 0xCD */  "Vendor specific",
/* 0xCE */  "Vendor specific",
/* 0xCF */  "Vendor specific",
/* 0xD0 */  "Vendor specific",
/* 0xD1 */  "Vendor specific",
/* 0xD2 */  "Vendor specific",
/* 0xD3 */  "Vendor specific",
/* 0xD4 */  "Vendor specific",
/* 0xD5 */  "Vendor specific",
/* 0xD6 */  "Vendor specific",
/* 0xD7 */  "Vendor specific",
/* 0xD8 */  "Vendor specific",
/* 0xD9 */  "Vendor specific",
/* 0xDA */  "Vendor specific",
/* 0xDB */  "Vendor specific",
/* 0xDC */  "Vendor specific",
/* 0xDD */  "Vendor specific",
/* 0xDE */  "Vendor specific",
/* 0xDF */  "Vendor specific",
/* 0xE0 */  "Vendor specific",
/* 0xE1 */  "Vendor specific",
/* 0xE2 */  "Vendor specific",
/* 0xE3 */  "Vendor specific",
/* 0xE4 */  "Vendor specific",
/* 0xE5 */  "Vendor specific",
/* 0xE6 */  "Vendor specific",
/* 0xE7 */  "Vendor specific",
/* 0xE8 */  "Vendor specific",
/* 0xE9 */  "Vendor specific",
/* 0xEA */  "Vendor specific",
/* 0xEB */  "Vendor specific",
/* 0xEC */  "Vendor specific",
/* 0xED */  "Vendor specific",
/* 0xEE */  "Vendor specific",
/* 0xEF */  "Vendor specific",
/* 0xF0 */  "Vendor specific",
/* 0xF1 */  "Vendor specific",
/* 0xF2 */  "Vendor specific",
/* 0xF3 */  "Vendor specific",
/* 0xF4 */  "Vendor specific",
/* 0xF5 */  "Vendor specific",
/* 0xF6 */  "Vendor specific",
/* 0xF7 */  "Vendor specific",
/* 0xF8 */  "Vendor specific",
/* 0xF9 */  "Vendor specific",
/* 0xFA */  "Vendor specific",
/* 0xFB */  "Vendor specific",
/* 0xFC */  "Vendor specific",
/* 0xFD */  "Vendor specific",
/* 0xFE */  "Vendor specific",
/* 0xFF */  "Vendor specific",
};


static const char * SFP_EXTENDED_IDENTIFIER[256] = {
/* 0x00 */  "GBIC definition is not specified",
/* 0x01 */  "GBIC is compliant with MOD_DEF 1",
/* 0x02 */  "GBIC is compliant with MOD_DEF 2",
/* 0x03 */  "GBIC is compliant with MOD_DEF 3",
/* 0x04 */  "GBIC/SFP function is defined by two-wire interface ID only",
/* 0x05 */  "GBIC is compliant with MOD_DEF 5",
/* 0x06 */  "GBIC is compliant with MOD_DEF 6",
/* 0x07 */  "GBIC is compliant with MOD_DEF 7",
/* 0x08 */  "Unallocated",
/* 0x09 */  "Unallocated",
/* 0x0A */  "Unallocated",
/* 0x0B */  "Unallocated",
/* 0x0C */  "Unallocated",
/* 0x0D */  "Unallocated",
/* 0x0E */  "Unallocated",
/* 0x0F */  "Unallocated",
/* 0x10 */  "Unallocated",
/* 0x11 */  "Unallocated",
/* 0x12 */  "Unallocated",
/* 0x13 */  "Unallocated",
/* 0x14 */  "Unallocated",
/* 0x15 */  "Unallocated",
/* 0x16 */  "Unallocated",
/* 0x17 */  "Unallocated",
/* 0x18 */  "Unallocated",
/* 0x19 */  "Unallocated",
/* 0x1A */  "Unallocated",
/* 0x1B */  "Unallocated",
/* 0x1C */  "Unallocated",
/* 0x1D */  "Unallocated",
/* 0x1E */  "Unallocated",
/* 0x1F */  "Unallocated",
/* 0x20 */  "Unallocated",
/* 0x21 */  "Unallocated",
/* 0x22 */  "Unallocated",
/* 0x23 */  "Unallocated",
/* 0x24 */  "Unallocated",
/* 0x25 */  "Unallocated",
/* 0x26 */  "Unallocated",
/* 0x27 */  "Unallocated",
/* 0x28 */  "Unallocated",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Unallocated",
/* 0x31 */  "Unallocated",
/* 0x32 */  "Unallocated",
/* 0x33 */  "Unallocated",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "Unallocated",
/* 0x41 */  "Unallocated",
/* 0x42 */  "Unallocated",
/* 0x43 */  "Unallocated",
/* 0x44 */  "Unallocated",
/* 0x45 */  "Unallocated",
/* 0x46 */  "Unallocated",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "Unallocated",
/* 0x51 */  "Unallocated",
/* 0x52 */  "Unallocated",
/* 0x53 */  "Unallocated",
/* 0x54 */  "Unallocated",
/* 0x55 */  "Unallocated",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Unallocated",
/* 0x81 */  "Unallocated",
/* 0x82 */  "Unallocated",
/* 0x83 */  "Unallocated",
/* 0x84 */  "Unallocated",
/* 0x85 */  "Unallocated",
/* 0x86 */  "Unallocated",
/* 0x87 */  "Unallocated",
/* 0x88 */  "Unallocated",
/* 0x89 */  "Unallocated",
/* 0x8A */  "Unallocated",
/* 0x8B */  "Unallocated",
/* 0x8C */  "Unallocated",
/* 0x8D */  "Unallocated",
/* 0x8E */  "Unallocated",
/* 0x8F */  "Unallocated",
/* 0x90 */  "Unallocated",
/* 0x91 */  "Unallocated",
/* 0x92 */  "Unallocated",
/* 0x93 */  "Unallocated",
/* 0x94 */  "Unallocated",
/* 0x95 */  "Unallocated",
/* 0x96 */  "Unallocated",
/* 0x97 */  "Unallocated",
/* 0x98 */  "Unallocated",
/* 0x99 */  "Unallocated",
/* 0x9A */  "Unallocated",
/* 0x9B */  "Unallocated",
/* 0x9C */  "Unallocated",
/* 0x9D */  "Unallocated",
/* 0x9E */  "Unallocated",
/* 0x9F */  "Unallocated",
/* 0xA0 */  "Unallocated",
/* 0xA1 */  "Unallocated",
/* 0xA2 */  "Unallocated",
/* 0xA3 */  "Unallocated",
/* 0xA4 */  "Unallocated",
/* 0xA5 */  "Unallocated",
/* 0xA6 */  "Unallocated",
/* 0xA7 */  "Unallocated",
/* 0xA8 */  "Unallocated",
/* 0xA9 */  "Unallocated",
/* 0xAA */  "Unallocated",
/* 0xAB */  "Unallocated",
/* 0xAC */  "Unallocated",
/* 0xAD */  "Unallocated",
/* 0xAE */  "Unallocated",
/* 0xAF */  "Unallocated",
/* 0xB0 */  "Unallocated",
/* 0xB1 */  "Unallocated",
/* 0xB2 */  "Unallocated",
/* 0xB3 */  "Unallocated",
/* 0xB4 */  "Unallocated",
/* 0xB5 */  "Unallocated",
/* 0xB6 */  "Unallocated",
/* 0xB7 */  "Unallocated",
/* 0xB8 */  "Unallocated",
/* 0xB9 */  "Unallocated",
/* 0xBA */  "Unallocated",
/* 0xBB */  "Unallocated",
/* 0xBC */  "Unallocated",
/* 0xBD */  "Unallocated",
/* 0xBE */  "Unallocated",
/* 0xBF */  "Unallocated",
/* 0xC0 */  "Unallocated",
/* 0xC1 */  "Unallocated",
/* 0xC2 */  "Unallocated",
/* 0xC3 */  "Unallocated",
/* 0xC4 */  "Unallocated",
/* 0xC5 */  "Unallocated",
/* 0xC6 */  "Unallocated",
/* 0xC7 */  "Unallocated",
/* 0xC8 */  "Unallocated",
/* 0xC9 */  "Unallocated",
/* 0xCA */  "Unallocated",
/* 0xCB */  "Unallocated",
/* 0xCC */  "Unallocated",
/* 0xCD */  "Unallocated",
/* 0xCE */  "Unallocated",
/* 0xCF */  "Unallocated",
/* 0xD0 */  "Unallocated",
/* 0xD1 */  "Unallocated",
/* 0xD2 */  "Unallocated",
/* 0xD3 */  "Unallocated",
/* 0xD4 */  "Unallocated",
/* 0xD5 */  "Unallocated",
/* 0xD6 */  "Unallocated",
/* 0xD7 */  "Unallocated",
/* 0xD8 */  "Unallocated",
/* 0xD9 */  "Unallocated",
/* 0xDA */  "Unallocated",
/* 0xDB */  "Unallocated",
/* 0xDC */  "Unallocated",
/* 0xDD */  "Unallocated",
/* 0xDE */  "Unallocated",
/* 0xDF */  "Unallocated",
/* 0xE0 */  "Unallocated",
/* 0xE1 */  "Unallocated",
/* 0xE2 */  "Unallocated",
/* 0xE3 */  "Unallocated",
/* 0xE4 */  "Unallocated",
/* 0xE5 */  "Unallocated",
/* 0xE6 */  "Unallocated",
/* 0xE7 */  "Unallocated",
/* 0xE8 */  "Unallocated",
/* 0xE9 */  "Unallocated",
/* 0xEA */  "Unallocated",
/* 0xEB */  "Unallocated",
/* 0xEC */  "Unallocated",
/* 0xED */  "Unallocated",
/* 0xEE */  "Unallocated",
/* 0xEF */  "Unallocated",
/* 0xF0 */  "Unallocated",
/* 0xF1 */  "Unallocated",
/* 0xF2 */  "Unallocated",
/* 0xF3 */  "Unallocated",
/* 0xF4 */  "Unallocated",
/* 0xF5 */  "Unallocated",
/* 0xF6 */  "Unallocated",
/* 0xF7 */  "Unallocated",
/* 0xF8 */  "Unallocated",
/* 0xF9 */  "Unallocated",
/* 0xFA */  "Unallocated",
/* 0xFB */  "Unallocated",
/* 0xFC */  "Unallocated",
/* 0xFD */  "Unallocated",
/* 0xFE */  "Unallocated",
/* 0xFF */  "Unallocated",
};


static const char * SFP_CONNECTOR[256] = {
/* 0x00 */  "Unknown",
/* 0x01 */  "SC (Subscriber Connector)",
/* 0x02 */  "Fibre Channel Style 1 copper connector",
/* 0x03 */  "Fibre Channel Style 2 copper connector",
/* 0x04 */  "BNC/TNC (Bayonet/Threaded Neill-Concelman)",
/* 0x05 */  "Fibre Channel coaxial headers",
/* 0x06 */  "FiberJack",
/* 0x07 */  "LC (Lucent Connector)",
/* 0x08 */  "MT-RJ (Mechanical Transfer - Registered Jack)",
/* 0x09 */  "MU (Multiple Optical)",
/* 0x0A */  "SG",
/* 0x0B */  "Optical pigtail",
/* 0x0C */  "MPO 1x12 (Multifiber Parallel Optic)",
/* 0x0D */  "MPO 2x16",
/* 0x0E */  "Unallocated",
/* 0x0F */  "Unallocated",
/* 0x10 */  "Unallocated",
/* 0x11 */  "Unallocated",
/* 0x12 */  "Unallocated",
/* 0x13 */  "Unallocated",
/* 0x14 */  "Unallocated",
/* 0x15 */  "Unallocated",
/* 0x16 */  "Unallocated",
/* 0x17 */  "Unallocated",
/* 0x18 */  "Unallocated",
/* 0x19 */  "Unallocated",
/* 0x1A */  "Unallocated",
/* 0x1B */  "Unallocated",
/* 0x1C */  "Unallocated",
/* 0x1D */  "Unallocated",
/* 0x1E */  "Unallocated",
/* 0x1F */  "Unallocated",
/* 0x20 */  "HSSDC II (High Speed Serial Data Connector)",
/* 0x21 */  "Copper pigtail",
/* 0x22 */  "RJ45 (Registered Jack)",
/* 0x23 */  "No separable connector",
/* 0x24 */  "MXC 2x16",
/* 0x25 */  "CS optical connector",
/* 0x26 */  "SN (previously Mini CS) optical connector",
/* 0x27 */  "MPO 2x12",
/* 0x28 */  "MPO 1x16",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Unallocated",
/* 0x31 */  "Unallocated",
/* 0x32 */  "Unallocated",
/* 0x33 */  "Unallocated",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "Unallocated",
/* 0x41 */  "Unallocated",
/* 0x42 */  "Unallocated",
/* 0x43 */  "Unallocated",
/* 0x44 */  "Unallocated",
/* 0x45 */  "Unallocated",
/* 0x46 */  "Unallocated",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "Unallocated",
/* 0x51 */  "Unallocated",
/* 0x52 */  "Unallocated",
/* 0x53 */  "Unallocated",
/* 0x54 */  "Unallocated",
/* 0x55 */  "Unallocated",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Vendor specific",
/* 0x81 */  "Vendor specific",
/* 0x82 */  "Vendor specific",
/* 0x83 */  "Vendor specific",
/* 0x84 */  "Vendor specific",
/* 0x85 */  "Vendor specific",
/* 0x86 */  "Vendor specific",
/* 0x87 */  "Vendor specific",
/* 0x88 */  "Vendor specific",
/* 0x89 */  "Vendor specific",
/* 0x8A */  "Vendor specific",
/* 0x8B */  "Vendor specific",
/* 0x8C */  "Vendor specific",
/* 0x8D */  "Vendor specific",
/* 0x8E */  "Vendor specific",
/* 0x8F */  "Vendor specific",
/* 0x90 */  "Vendor specific",
/* 0x91 */  "Vendor specific",
/* 0x92 */  "Vendor specific",
/* 0x93 */  "Vendor specific",
/* 0x94 */  "Vendor specific",
/* 0x95 */  "Vendor specific",
/* 0x96 */  "Vendor specific",
/* 0x97 */  "Vendor specific",
/* 0x98 */  "Vendor specific",
/* 0x99 */  "Vendor specific",
/* 0x9A */  "Vendor specific",
/* 0x9B */  "Vendor specific",
/* 0x9C */  "Vendor specific",
/* 0x9D */  "Vendor specific",
/* 0x9E */  "Vendor specific",
/* 0x9F */  "Vendor specific",
/* 0xA0 */  "Vendor specific",
/* 0xA1 */  "Vendor specific",
/* 0xA2 */  "Vendor specific",
/* 0xA3 */  "Vendor specific",
/* 0xA4 */  "Vendor specific",
/* 0xA5 */  "Vendor specific",
/* 0xA6 */  "Vendor specific",
/* 0xA7 */  "Vendor specific",
/* 0xA8 */  "Vendor specific",
/* 0xA9 */  "Vendor specific",
/* 0xAA */  "Vendor specific",
/* 0xAB */  "Vendor specific",
/* 0xAC */  "Vendor specific",
/* 0xAD */  "Vendor specific",
/* 0xAE */  "Vendor specific",
/* 0xAF */  "Vendor specific",
/* 0xB0 */  "Vendor specific",
/* 0xB1 */  "Vendor specific",
/* 0xB2 */  "Vendor specific",
/* 0xB3 */  "Vendor specific",
/* 0xB4 */  "Vendor specific",
/* 0xB5 */  "Vendor specific",
/* 0xB6 */  "Vendor specific",
/* 0xB7 */  "Vendor specific",
/* 0xB8 */  "Vendor specific",
/* 0xB9 */  "Vendor specific",
/* 0xBA */  "Vendor specific",
/* 0xBB */  "Vendor specific",
/* 0xBC */  "Vendor specific",
/* 0xBD */  "Vendor specific",
/* 0xBE */  "Vendor specific",
/* 0xBF */  "Vendor specific",
/* 0xC0 */  "Vendor specific",
/* 0xC1 */  "Vendor specific",
/* 0xC2 */  "Vendor specific",
/* 0xC3 */  "Vendor specific",
/* 0xC4 */  "Vendor specific",
/* 0xC5 */  "Vendor specific",
/* 0xC6 */  "Vendor specific",
/* 0xC7 */  "Vendor specific",
/* 0xC8 */  "Vendor specific",
/* 0xC9 */  "Vendor specific",
/* 0xCA */  "Vendor specific",
/* 0xCB */  "Vendor specific",
/* 0xCC */  "Vendor specific",
/* 0xCD */  "Vendor specific",
/* 0xCE */  "Vendor specific",
/* 0xCF */  "Vendor specific",
/* 0xD0 */  "Vendor specific",
/* 0xD1 */  "Vendor specific",
/* 0xD2 */  "Vendor specific",
/* 0xD3 */  "Vendor specific",
/* 0xD4 */  "Vendor specific",
/* 0xD5 */  "Vendor specific",
/* 0xD6 */  "Vendor specific",
/* 0xD7 */  "Vendor specific",
/* 0xD8 */  "Vendor specific",
/* 0xD9 */  "Vendor specific",
/* 0xDA */  "Vendor specific",
/* 0xDB */  "Vendor specific",
/* 0xDC */  "Vendor specific",
/* 0xDD */  "Vendor specific",
/* 0xDE */  "Vendor specific",
/* 0xDF */  "Vendor specific",
/* 0xE0 */  "Vendor specific",
/* 0xE1 */  "Vendor specific",
/* 0xE2 */  "Vendor specific",
/* 0xE3 */  "Vendor specific",
/* 0xE4 */  "Vendor specific",
/* 0xE5 */  "Vendor specific",
/* 0xE6 */  "Vendor specific",
/* 0xE7 */  "Vendor specific",
/* 0xE8 */  "Vendor specific",
/* 0xE9 */  "Vendor specific",
/* 0xEA */  "Vendor specific",
/* 0xEB */  "Vendor specific",
/* 0xEC */  "Vendor specific",
/* 0xED */  "Vendor specific",
/* 0xEE */  "Vendor specific",
/* 0xEF */  "Vendor specific",
/* 0xF0 */  "Vendor specific",
/* 0xF1 */  "Vendor specific",
/* 0xF2 */  "Vendor specific",
/* 0xF3 */  "Vendor specific",
/* 0xF4 */  "Vendor specific",
/* 0xF5 */  "Vendor specific",
/* 0xF6 */  "Vendor specific",
/* 0xF7 */  "Vendor specific",
/* 0xF8 */  "Vendor specific",
/* 0xF9 */  "Vendor specific",
/* 0xFA */  "Vendor specific",
/* 0xFB */  "Vendor specific",
/* 0xFC */  "Vendor specific",
/* 0xFD */  "Vendor specific",
/* 0xFE */  "Vendor specific",
/* 0xFF */  "Vendor specific",
};


static const char * SFP_COMPLIANCE_CODE[64] = {
/* 10G Ethernet Compliance Codes */
/* 0x03:bit7 */  "10G Base-ER",
/* 0x03:bit6 */  "10G Base-LRM",
/* 0x03:bit5 */  "10G Base-LR",
/* 0x03:bit4 */  "10G Base-SR",
/* Infiniband Compliance Codes */
/* 0x03:bit3 */  "1X SX",
/* 0x03:bit2 */  "1X LX",
/* 0x03:bit1 */  "1X Copper Active",
/* 0x03:bit0 */  "1X Copper Passive",
/* ESCON Compliance Codes */
/* 0x04:bit7 */  "ESCON MMF, 1310nm LED",
/* 0x04:bit6 */  "ESCON SMF, 1310nm Laser",
/* SONET Compliance Codes */
/* 0x04:bit5 */  "OC-192, short reach",
/* 0x04:bit4 */  "SONET reach specifier bit 1",
/* 0x04:bit3 */  "SONET reach specifier bit 2",
/* 0x04:bit2 */  "OC-48, long reach",
/* 0x04:bit1 */  "OC-48, intermediate reach",
/* 0x04:bit0 */  "OC-48, short reach",
/* 0x05:bit7 */  "Unallocated",
/* 0x05:bit6 */  "OC-12, single mode, long reach",
/* 0x05:bit5 */  "OC-12, single mode, inter. reach",
/* 0x05:bit4 */  "OC-12, short reach",
/* 0x05:bit3 */  "Unallocated",
/* 0x05:bit2 */  "OC-3, single mode, long reach",
/* 0x05:bit1 */  "OC-3, single mode, inter. reach",
/* 0x05:bit0 */  "OC-3, short reach",
/* Ethernet Compliance Codes */
/* 0x06:bit7 */  "BASE-PX",
/* 0x06:bit6 */  "BASE-BX10",
/* 0x06:bit5 */  "100BASE-FX",
/* 0x06:bit4 */  "100BASE-LX/LX10",
/* 0x06:bit3 */  "1000BASE-T",
/* 0x06:bit2 */  "1000BASE-CX",
/* 0x06:bit1 */  "1000BASE-LX",
/* 0x06:bit0 */  "1000BASE-SX",
/* Fibre Channel Link Length */
/* 0x07:bit7 */  "very long distance (V)",
/* 0x07:bit6 */  "short distance (S)",
/* 0x07:bit5 */  "intermediate distance (I)",
/* 0x07:bit4 */  "long distance (L)",
/* 0x07:bit3 */  "medium distance (M)",
/* Fibre Channel Technology */
/* 0x07:bit2 */  "Shortwave laser, linear Rx (SA)",
/* 0x07:bit1 */  "Longwave laser (LC)",
/* 0x07:bit0 */  "Electrical inter-enclosure (EL)",
/* 0x08:bit7 */  "Electrical intra-enclosure (EL)",
/* 0x08:bit6 */  "Shortwave laser w/o OFC (SN)",
/* 0x08:bit5 */  "Shortwave laser with OFC (SL)",
/* 0x08:bit4 */  "Longwave laser (LL)",
/* SFP+ Cable Technology */
/* 0x08:bit3 */  "Active Cable",
/* 0x08:bit2 */  "Passive Cable",
/* Unallocated */
/* 0x08:bit1 */  "Unallocated",
/* 0x08:bit0 */  "Unallocated",
/* Fibre Channel Transmission Media */
/* 0x09:bit7 */  "Twin Axial Pair (TW)",
/* 0x09:bit6 */  "Twisted Pair (TP)",
/* 0x09:bit5 */  "Miniature Coax (MI)",
/* 0x09:bit4 */  "Video Coax (TV)",
/* 0x09:bit3 */  "Multimode, 62.5um (M6)",
/* 0x09:bit2 */  "Multimode, 50um (M5, M5E)",
/* 0x09:bit1 */  "Unallocated",
/* 0x09:bit0 */  "Single Mode (SM)",
/* Fibre Channel Speed */
/* 0x0A:bit7 */  "1200 MBytes/sec",
/* 0x0A:bit6 */  "800 MBytes/sec",
/* 0x0A:bit5 */  "1600 MBytes/sec",
/* 0x0A:bit4 */  "400 MBytes/sec",
/* 0x0A:bit3 */  "3200 MBytes/sec",
/* 0x0A:bit2 */  "200 MBytes/sec",
/* 0x0A:bit1 */  "See byte 36 “extended compliance code”",
/* 0x0A:bit0 */  "100 MBytes/sec",
};


static const char * SFP_ENCODING[256] = {
/* 0x00 */  "Unspecified",
/* 0x01 */  "8B/10B",
/* 0x02 */  "4B/5B",
/* 0x03 */  "NRZ",
/* 0x04 */  "(SFF-8472)Manchester / (8436/8636)SONET Scrambled",
/* 0x05 */  "(SFF-8472)SONET Scrambled / (8436/8636)64B/66B",
/* 0x06 */  "(SFF-8472)64B/66B / (8436/8636)Manchester",
/* 0x07 */  "256B/257B (transcoded FEC-enabled data)",
/* 0x08 */  "PAM4",
/* 0x09 */  "Unallocated",
/* 0x0A */  "Unallocated",
/* 0x0B */  "Unallocated",
/* 0x0C */  "Unallocated",
/* 0x0D */  "Unallocated",
/* 0x0E */  "Unallocated",
/* 0x0F */  "Unallocated",
/* 0x10 */  "Unallocated",
/* 0x11 */  "Unallocated",
/* 0x12 */  "Unallocated",
/* 0x13 */  "Unallocated",
/* 0x14 */  "Unallocated",
/* 0x15 */  "Unallocated",
/* 0x16 */  "Unallocated",
/* 0x17 */  "Unallocated",
/* 0x18 */  "Unallocated",
/* 0x19 */  "Unallocated",
/* 0x1A */  "Unallocated",
/* 0x1B */  "Unallocated",
/* 0x1C */  "Unallocated",
/* 0x1D */  "Unallocated",
/* 0x1E */  "Unallocated",
/* 0x1F */  "Unallocated",
/* 0x20 */  "Unallocated",
/* 0x21 */  "Unallocated",
/* 0x22 */  "Unallocated",
/* 0x23 */  "Unallocated",
/* 0x24 */  "Unallocated",
/* 0x25 */  "Unallocated",
/* 0x26 */  "Unallocated",
/* 0x27 */  "Unallocated",
/* 0x28 */  "Unallocated",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Unallocated",
/* 0x31 */  "Unallocated",
/* 0x32 */  "Unallocated",
/* 0x33 */  "Unallocated",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "Unallocated",
/* 0x41 */  "Unallocated",
/* 0x42 */  "Unallocated",
/* 0x43 */  "Unallocated",
/* 0x44 */  "Unallocated",
/* 0x45 */  "Unallocated",
/* 0x46 */  "Unallocated",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "Unallocated",
/* 0x51 */  "Unallocated",
/* 0x52 */  "Unallocated",
/* 0x53 */  "Unallocated",
/* 0x54 */  "Unallocated",
/* 0x55 */  "Unallocated",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Unallocated",
/* 0x81 */  "Unallocated",
/* 0x82 */  "Unallocated",
/* 0x83 */  "Unallocated",
/* 0x84 */  "Unallocated",
/* 0x85 */  "Unallocated",
/* 0x86 */  "Unallocated",
/* 0x87 */  "Unallocated",
/* 0x88 */  "Unallocated",
/* 0x89 */  "Unallocated",
/* 0x8A */  "Unallocated",
/* 0x8B */  "Unallocated",
/* 0x8C */  "Unallocated",
/* 0x8D */  "Unallocated",
/* 0x8E */  "Unallocated",
/* 0x8F */  "Unallocated",
/* 0x90 */  "Unallocated",
/* 0x91 */  "Unallocated",
/* 0x92 */  "Unallocated",
/* 0x93 */  "Unallocated",
/* 0x94 */  "Unallocated",
/* 0x95 */  "Unallocated",
/* 0x96 */  "Unallocated",
/* 0x97 */  "Unallocated",
/* 0x98 */  "Unallocated",
/* 0x99 */  "Unallocated",
/* 0x9A */  "Unallocated",
/* 0x9B */  "Unallocated",
/* 0x9C */  "Unallocated",
/* 0x9D */  "Unallocated",
/* 0x9E */  "Unallocated",
/* 0x9F */  "Unallocated",
/* 0xA0 */  "Unallocated",
/* 0xA1 */  "Unallocated",
/* 0xA2 */  "Unallocated",
/* 0xA3 */  "Unallocated",
/* 0xA4 */  "Unallocated",
/* 0xA5 */  "Unallocated",
/* 0xA6 */  "Unallocated",
/* 0xA7 */  "Unallocated",
/* 0xA8 */  "Unallocated",
/* 0xA9 */  "Unallocated",
/* 0xAA */  "Unallocated",
/* 0xAB */  "Unallocated",
/* 0xAC */  "Unallocated",
/* 0xAD */  "Unallocated",
/* 0xAE */  "Unallocated",
/* 0xAF */  "Unallocated",
/* 0xB0 */  "Unallocated",
/* 0xB1 */  "Unallocated",
/* 0xB2 */  "Unallocated",
/* 0xB3 */  "Unallocated",
/* 0xB4 */  "Unallocated",
/* 0xB5 */  "Unallocated",
/* 0xB6 */  "Unallocated",
/* 0xB7 */  "Unallocated",
/* 0xB8 */  "Unallocated",
/* 0xB9 */  "Unallocated",
/* 0xBA */  "Unallocated",
/* 0xBB */  "Unallocated",
/* 0xBC */  "Unallocated",
/* 0xBD */  "Unallocated",
/* 0xBE */  "Unallocated",
/* 0xBF */  "Unallocated",
/* 0xC0 */  "Unallocated",
/* 0xC1 */  "Unallocated",
/* 0xC2 */  "Unallocated",
/* 0xC3 */  "Unallocated",
/* 0xC4 */  "Unallocated",
/* 0xC5 */  "Unallocated",
/* 0xC6 */  "Unallocated",
/* 0xC7 */  "Unallocated",
/* 0xC8 */  "Unallocated",
/* 0xC9 */  "Unallocated",
/* 0xCA */  "Unallocated",
/* 0xCB */  "Unallocated",
/* 0xCC */  "Unallocated",
/* 0xCD */  "Unallocated",
/* 0xCE */  "Unallocated",
/* 0xCF */  "Unallocated",
/* 0xD0 */  "Unallocated",
/* 0xD1 */  "Unallocated",
/* 0xD2 */  "Unallocated",
/* 0xD3 */  "Unallocated",
/* 0xD4 */  "Unallocated",
/* 0xD5 */  "Unallocated",
/* 0xD6 */  "Unallocated",
/* 0xD7 */  "Unallocated",
/* 0xD8 */  "Unallocated",
/* 0xD9 */  "Unallocated",
/* 0xDA */  "Unallocated",
/* 0xDB */  "Unallocated",
/* 0xDC */  "Unallocated",
/* 0xDD */  "Unallocated",
/* 0xDE */  "Unallocated",
/* 0xDF */  "Unallocated",
/* 0xE0 */  "Unallocated",
/* 0xE1 */  "Unallocated",
/* 0xE2 */  "Unallocated",
/* 0xE3 */  "Unallocated",
/* 0xE4 */  "Unallocated",
/* 0xE5 */  "Unallocated",
/* 0xE6 */  "Unallocated",
/* 0xE7 */  "Unallocated",
/* 0xE8 */  "Unallocated",
/* 0xE9 */  "Unallocated",
/* 0xEA */  "Unallocated",
/* 0xEB */  "Unallocated",
/* 0xEC */  "Unallocated",
/* 0xED */  "Unallocated",
/* 0xEE */  "Unallocated",
/* 0xEF */  "Unallocated",
/* 0xF0 */  "Unallocated",
/* 0xF1 */  "Unallocated",
/* 0xF2 */  "Unallocated",
/* 0xF3 */  "Unallocated",
/* 0xF4 */  "Unallocated",
/* 0xF5 */  "Unallocated",
/* 0xF6 */  "Unallocated",
/* 0xF7 */  "Unallocated",
/* 0xF8 */  "Unallocated",
/* 0xF9 */  "Unallocated",
/* 0xFA */  "Unallocated",
/* 0xFB */  "Unallocated",
/* 0xFC */  "Unallocated",
/* 0xFD */  "Unallocated",
/* 0xFE */  "Unallocated",
/* 0xFF */  "Unallocated",
};


static const char * SFP_RATE_IDENTIFIER[256] = {
/* 0x00 */  "Unspecified",
/* 0x01 */  "SFF-8079 (4/2/1G Rate_Select & AS0/AS1)",
/* 0x02 */  "SFF-8431 (8/4/2G Rx Rate_Select only)",
/* 0x03 */  "Unspecified",
/* 0x04 */  "SFF-8431 (8/4/2G Tx Rate_Select only)",
/* 0x05 */  "Unspecified",
/* 0x06 */  "SFF-8431 (8/4/2G Independent Rx & Tx Rate_select)",
/* 0x07 */  "Unspecified",
/* 0x08 */  "FC-PI-5 (16/8/4G Rx Rate_select only) High=16G only, Low=8G/4G",
/* 0x09 */  "Unspecified",
/* 0x0A */  "FC-PI-5 (16/8/4G Independent Rx, Tx Rate_select) High=16G only, Low=8G/4G",
/* 0x0B */  "Unspecified",
/* 0x0C */  "FC-PI-6 (32/16/8G Independent Rx, Tx Rate_Select) High=32G only, Low = 16G/8G",
/* 0x0D */  "Unspecified",
/* 0x0E */  "See SFF-8472",
/* 0x0F */  "Unspecified",
/* 0x10 */  "FC-PI-7 (64/32/16G Independent Rx, Tx Rate Select) High = 32GFC and 64GFC. Low = 16GFC.",
/* 0x11 */  "Unspecified",
/* 0x12 */  "Unallocated",
/* 0x13 */  "Unallocated",
/* 0x14 */  "Unallocated",
/* 0x15 */  "Unallocated",
/* 0x16 */  "Unallocated",
/* 0x17 */  "Unallocated",
/* 0x18 */  "Unallocated",
/* 0x19 */  "Unallocated",
/* 0x1A */  "Unallocated",
/* 0x1B */  "Unallocated",
/* 0x1C */  "Unallocated",
/* 0x1D */  "Unallocated",
/* 0x1E */  "Unallocated",
/* 0x1F */  "Unallocated",
/* 0x20 */  "Unallocated",
/* 0x21 */  "Unallocated",
/* 0x22 */  "Unallocated",
/* 0x23 */  "Unallocated",
/* 0x24 */  "Unallocated",
/* 0x25 */  "Unallocated",
/* 0x26 */  "Unallocated",
/* 0x27 */  "Unallocated",
/* 0x28 */  "Unallocated",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Unallocated",
/* 0x31 */  "Unallocated",
/* 0x32 */  "Unallocated",
/* 0x33 */  "Unallocated",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "Unallocated",
/* 0x41 */  "Unallocated",
/* 0x42 */  "Unallocated",
/* 0x43 */  "Unallocated",
/* 0x44 */  "Unallocated",
/* 0x45 */  "Unallocated",
/* 0x46 */  "Unallocated",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "Unallocated",
/* 0x51 */  "Unallocated",
/* 0x52 */  "Unallocated",
/* 0x53 */  "Unallocated",
/* 0x54 */  "Unallocated",
/* 0x55 */  "Unallocated",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Unallocated",
/* 0x81 */  "Unallocated",
/* 0x82 */  "Unallocated",
/* 0x83 */  "Unallocated",
/* 0x84 */  "Unallocated",
/* 0x85 */  "Unallocated",
/* 0x86 */  "Unallocated",
/* 0x87 */  "Unallocated",
/* 0x88 */  "Unallocated",
/* 0x89 */  "Unallocated",
/* 0x8A */  "Unallocated",
/* 0x8B */  "Unallocated",
/* 0x8C */  "Unallocated",
/* 0x8D */  "Unallocated",
/* 0x8E */  "Unallocated",
/* 0x8F */  "Unallocated",
/* 0x90 */  "Unallocated",
/* 0x91 */  "Unallocated",
/* 0x92 */  "Unallocated",
/* 0x93 */  "Unallocated",
/* 0x94 */  "Unallocated",
/* 0x95 */  "Unallocated",
/* 0x96 */  "Unallocated",
/* 0x97 */  "Unallocated",
/* 0x98 */  "Unallocated",
/* 0x99 */  "Unallocated",
/* 0x9A */  "Unallocated",
/* 0x9B */  "Unallocated",
/* 0x9C */  "Unallocated",
/* 0x9D */  "Unallocated",
/* 0x9E */  "Unallocated",
/* 0x9F */  "Unallocated",
/* 0xA0 */  "Unallocated",
/* 0xA1 */  "Unallocated",
/* 0xA2 */  "Unallocated",
/* 0xA3 */  "Unallocated",
/* 0xA4 */  "Unallocated",
/* 0xA5 */  "Unallocated",
/* 0xA6 */  "Unallocated",
/* 0xA7 */  "Unallocated",
/* 0xA8 */  "Unallocated",
/* 0xA9 */  "Unallocated",
/* 0xAA */  "Unallocated",
/* 0xAB */  "Unallocated",
/* 0xAC */  "Unallocated",
/* 0xAD */  "Unallocated",
/* 0xAE */  "Unallocated",
/* 0xAF */  "Unallocated",
/* 0xB0 */  "Unallocated",
/* 0xB1 */  "Unallocated",
/* 0xB2 */  "Unallocated",
/* 0xB3 */  "Unallocated",
/* 0xB4 */  "Unallocated",
/* 0xB5 */  "Unallocated",
/* 0xB6 */  "Unallocated",
/* 0xB7 */  "Unallocated",
/* 0xB8 */  "Unallocated",
/* 0xB9 */  "Unallocated",
/* 0xBA */  "Unallocated",
/* 0xBB */  "Unallocated",
/* 0xBC */  "Unallocated",
/* 0xBD */  "Unallocated",
/* 0xBE */  "Unallocated",
/* 0xBF */  "Unallocated",
/* 0xC0 */  "Unallocated",
/* 0xC1 */  "Unallocated",
/* 0xC2 */  "Unallocated",
/* 0xC3 */  "Unallocated",
/* 0xC4 */  "Unallocated",
/* 0xC5 */  "Unallocated",
/* 0xC6 */  "Unallocated",
/* 0xC7 */  "Unallocated",
/* 0xC8 */  "Unallocated",
/* 0xC9 */  "Unallocated",
/* 0xCA */  "Unallocated",
/* 0xCB */  "Unallocated",
/* 0xCC */  "Unallocated",
/* 0xCD */  "Unallocated",
/* 0xCE */  "Unallocated",
/* 0xCF */  "Unallocated",
/* 0xD0 */  "Unallocated",
/* 0xD1 */  "Unallocated",
/* 0xD2 */  "Unallocated",
/* 0xD3 */  "Unallocated",
/* 0xD4 */  "Unallocated",
/* 0xD5 */  "Unallocated",
/* 0xD6 */  "Unallocated",
/* 0xD7 */  "Unallocated",
/* 0xD8 */  "Unallocated",
/* 0xD9 */  "Unallocated",
/* 0xDA */  "Unallocated",
/* 0xDB */  "Unallocated",
/* 0xDC */  "Unallocated",
/* 0xDD */  "Unallocated",
/* 0xDE */  "Unallocated",
/* 0xDF */  "Unallocated",
/* 0xE0 */  "Unallocated",
/* 0xE1 */  "Unallocated",
/* 0xE2 */  "Unallocated",
/* 0xE3 */  "Unallocated",
/* 0xE4 */  "Unallocated",
/* 0xE5 */  "Unallocated",
/* 0xE6 */  "Unallocated",
/* 0xE7 */  "Unallocated",
/* 0xE8 */  "Unallocated",
/* 0xE9 */  "Unallocated",
/* 0xEA */  "Unallocated",
/* 0xEB */  "Unallocated",
/* 0xEC */  "Unallocated",
/* 0xED */  "Unallocated",
/* 0xEE */  "Unallocated",
/* 0xEF */  "Unallocated",
/* 0xF0 */  "Unallocated",
/* 0xF1 */  "Unallocated",
/* 0xF2 */  "Unallocated",
/* 0xF3 */  "Unallocated",
/* 0xF4 */  "Unallocated",
/* 0xF5 */  "Unallocated",
/* 0xF6 */  "Unallocated",
/* 0xF7 */  "Unallocated",
/* 0xF8 */  "Unallocated",
/* 0xF9 */  "Unallocated",
/* 0xFA */  "Unallocated",
/* 0xFB */  "Unallocated",
/* 0xFC */  "Unallocated",
/* 0xFD */  "Unallocated",
/* 0xFE */  "Unallocated",
/* 0xFF */  "Unallocated",
};


static const char * SFP_EXTENDED_COMPLIANCE_CODE[256] = {
/* 0x00 */  "Unspecified",
/* 0x01 */  "100G AOC (Active Optical Cable) or 25GAUI C2M AOC. Providing a worst BER of 5 * 10^-5",
/* 0x02 */  "100GBASE-SR4 or 25GBASE-SR",
/* 0x03 */  "100GBASE-LR4 or 25GBASE-LR",
/* 0x04 */  "100GBASE-ER4 or 25GBASE-ER",
/* 0x05 */  "100GBASE-SR10",
/* 0x06 */  "100G CWDM4",
/* 0x07 */  "100G PSM4 Parallel SMF",
/* 0x08 */  "100G ACC (Active Copper Cable) or 25GAUI C2M ACC. Providing a worst BER of 5 * 10^-5",
/* 0x09 */  "Obsolete (assigned before 100G CWDM4 MSA required FEC)",
/* 0x0A */  "Unallocated",
/* 0x0B */  "100GBASE-CR4, 25GBASE-CR CA-25G-L or 50GBASE-CR2 with RS (Clause91) FEC",
/* 0x0C */  "25GBASE-CR CA-25G-S or 50GBASE-CR2 with BASE-R (Clause 74 Fire code) FEC",
/* 0x0D */  "25GBASE-CR CA-25G-N or 50GBASE-CR2 with no FEC",
/* 0x0E */  "Unallocated",
/* 0x0F */  "Unallocated",
/* 0x10 */  "40GBASE-ER4",
/* 0x11 */  "4 x 10GBASE-SR",
/* 0x12 */  "40G PSM4 Parallel SMF",
/* 0x13 */  "G959.1 profile P1I1-2D1 (10709 MBd, 2km, 1310 nm SM)",
/* 0x14 */  "G959.1 profile P1S1-2D2 (10709 MBd, 40km, 1550 nm SM)",
/* 0x15 */  "G959.1 profile P1L1-2D2 (10709 MBd, 80km, 1550 nm SM)",
/* 0x16 */  "10GBASE-T with SFI electrical interface",
/* 0x17 */  "100G CLR4",
/* 0x18 */  "100G AOC or 25GAUI C2M AOC. Providing a worst BER of 10^-12 or below",
/* 0x19 */  "100G ACC or 25GAUI C2M ACC. Providing a worst BER of 10^-12 or below",
/* 0x1A */  "100GE-DWDM2 (DWDM transceiver using 2 wavelengths on a 1550 nm DWDM grid with a reach up to 80 km)",
/* 0x1B */  "100G 1550nm WDM (4 wavelengths)",
/* 0x1C */  "10GBASE-T Short Reach (30 meters)",
/* 0x1D */  "5GBASE-T",
/* 0x1E */  "2.5GBASE-T",
/* 0x1F */  "40G SWDM4",
/* 0x20 */  "100G SWDM4",
/* 0x21 */  "100G PAM4 BiDi",
/* 0x22 */  "4WDM-10 MSA (10km version of 100G CWDM4 with same RS(528,514) FEC in host system)",
/* 0x23 */  "4WDM-20 MSA (20km version of 100GBASE-LR4 with RS(528,514) FEC in host system)",
/* 0x24 */  "4WDM-40 MSA (40km reach with APD receiver and RS(528,514) FEC in host system)",
/* 0x25 */  "100GBASE-DR (clause 140), CAUI-4 (no FEC)",
/* 0x26 */  "100G-FR or 100GBASE-FR1 (clause 140), CAUI-4 (no FEC)",
/* 0x27 */  "100G-LR or 100GBASE-LR1 (clause 140), CAUI-4 (no FEC)",
/* 0x28 */  "Unallocated",
/* 0x29 */  "Unallocated",
/* 0x2A */  "Unallocated",
/* 0x2B */  "Unallocated",
/* 0x2C */  "Unallocated",
/* 0x2D */  "Unallocated",
/* 0x2E */  "Unallocated",
/* 0x2F */  "Unallocated",
/* 0x30 */  "Active Copper Cable with 50GAUI, 100GAUI-2 or 200GAUI-4 C2M. Providing a worst BER of 10^-6 or below",
/* 0x31 */  "Active Optical Cable with 50GAUI, 100GAUI-2 or 200GAUI-4 C2M. Providing a worst BER of 10^-6 or below",
/* 0x32 */  "Active Copper Cable with 50GAUI, 100GAUI-2 or 200GAUI-4 C2M. Providing a worst BER of 2.6x10^-4 for ACC, 10^-5 for AUI, or below",
/* 0x33 */  "Active Optical Cable with 50GAUI, 100GAUI-2 or 200GAUI-4 C2M. Providing a worst BER of 2.6x10^-4 for AOC, 10^-5 for AUI, or below",
/* 0x34 */  "Unallocated",
/* 0x35 */  "Unallocated",
/* 0x36 */  "Unallocated",
/* 0x37 */  "Unallocated",
/* 0x38 */  "Unallocated",
/* 0x39 */  "Unallocated",
/* 0x3A */  "Unallocated",
/* 0x3B */  "Unallocated",
/* 0x3C */  "Unallocated",
/* 0x3D */  "Unallocated",
/* 0x3E */  "Unallocated",
/* 0x3F */  "Unallocated",
/* 0x40 */  "50GBASE-CR, 100GBASE-CR2, or 200GBASE-CR4",
/* 0x41 */  "50GBASE-SR, 100GBASE-SR2, or 200GBASE-SR4",
/* 0x42 */  "50GBASE-FR or 200GBASE-DR4",
/* 0x43 */  "200GBASE-FR4",
/* 0x44 */  "200G 1550 nm PSM4",
/* 0x45 */  "50GBASE-LR",
/* 0x46 */  "200GBASE-LR4",
/* 0x47 */  "Unallocated",
/* 0x48 */  "Unallocated",
/* 0x49 */  "Unallocated",
/* 0x4A */  "Unallocated",
/* 0x4B */  "Unallocated",
/* 0x4C */  "Unallocated",
/* 0x4D */  "Unallocated",
/* 0x4E */  "Unallocated",
/* 0x4F */  "Unallocated",
/* 0x50 */  "64GFC EA",
/* 0x51 */  "64GFC SW",
/* 0x52 */  "64GFC LW",
/* 0x53 */  "128GFC EA",
/* 0x54 */  "128GFC SW",
/* 0x55 */  "128GFC LW",
/* 0x56 */  "Unallocated",
/* 0x57 */  "Unallocated",
/* 0x58 */  "Unallocated",
/* 0x59 */  "Unallocated",
/* 0x5A */  "Unallocated",
/* 0x5B */  "Unallocated",
/* 0x5C */  "Unallocated",
/* 0x5D */  "Unallocated",
/* 0x5E */  "Unallocated",
/* 0x5F */  "Unallocated",
/* 0x60 */  "Unallocated",
/* 0x61 */  "Unallocated",
/* 0x62 */  "Unallocated",
/* 0x63 */  "Unallocated",
/* 0x64 */  "Unallocated",
/* 0x65 */  "Unallocated",
/* 0x66 */  "Unallocated",
/* 0x67 */  "Unallocated",
/* 0x68 */  "Unallocated",
/* 0x69 */  "Unallocated",
/* 0x6A */  "Unallocated",
/* 0x6B */  "Unallocated",
/* 0x6C */  "Unallocated",
/* 0x6D */  "Unallocated",
/* 0x6E */  "Unallocated",
/* 0x6F */  "Unallocated",
/* 0x70 */  "Unallocated",
/* 0x71 */  "Unallocated",
/* 0x72 */  "Unallocated",
/* 0x73 */  "Unallocated",
/* 0x74 */  "Unallocated",
/* 0x75 */  "Unallocated",
/* 0x76 */  "Unallocated",
/* 0x77 */  "Unallocated",
/* 0x78 */  "Unallocated",
/* 0x79 */  "Unallocated",
/* 0x7A */  "Unallocated",
/* 0x7B */  "Unallocated",
/* 0x7C */  "Unallocated",
/* 0x7D */  "Unallocated",
/* 0x7E */  "Unallocated",
/* 0x7F */  "Unallocated",
/* 0x80 */  "Unallocated",
/* 0x81 */  "Unallocated",
/* 0x82 */  "Unallocated",
/* 0x83 */  "Unallocated",
/* 0x84 */  "Unallocated",
/* 0x85 */  "Unallocated",
/* 0x86 */  "Unallocated",
/* 0x87 */  "Unallocated",
/* 0x88 */  "Unallocated",
/* 0x89 */  "Unallocated",
/* 0x8A */  "Unallocated",
/* 0x8B */  "Unallocated",
/* 0x8C */  "Unallocated",
/* 0x8D */  "Unallocated",
/* 0x8E */  "Unallocated",
/* 0x8F */  "Unallocated",
/* 0x90 */  "Unallocated",
/* 0x91 */  "Unallocated",
/* 0x92 */  "Unallocated",
/* 0x93 */  "Unallocated",
/* 0x94 */  "Unallocated",
/* 0x95 */  "Unallocated",
/* 0x96 */  "Unallocated",
/* 0x97 */  "Unallocated",
/* 0x98 */  "Unallocated",
/* 0x99 */  "Unallocated",
/* 0x9A */  "Unallocated",
/* 0x9B */  "Unallocated",
/* 0x9C */  "Unallocated",
/* 0x9D */  "Unallocated",
/* 0x9E */  "Unallocated",
/* 0x9F */  "Unallocated",
/* 0xA0 */  "Unallocated",
/* 0xA1 */  "Unallocated",
/* 0xA2 */  "Unallocated",
/* 0xA3 */  "Unallocated",
/* 0xA4 */  "Unallocated",
/* 0xA5 */  "Unallocated",
/* 0xA6 */  "Unallocated",
/* 0xA7 */  "Unallocated",
/* 0xA8 */  "Unallocated",
/* 0xA9 */  "Unallocated",
/* 0xAA */  "Unallocated",
/* 0xAB */  "Unallocated",
/* 0xAC */  "Unallocated",
/* 0xAD */  "Unallocated",
/* 0xAE */  "Unallocated",
/* 0xAF */  "Unallocated",
/* 0xB0 */  "Unallocated",
/* 0xB1 */  "Unallocated",
/* 0xB2 */  "Unallocated",
/* 0xB3 */  "Unallocated",
/* 0xB4 */  "Unallocated",
/* 0xB5 */  "Unallocated",
/* 0xB6 */  "Unallocated",
/* 0xB7 */  "Unallocated",
/* 0xB8 */  "Unallocated",
/* 0xB9 */  "Unallocated",
/* 0xBA */  "Unallocated",
/* 0xBB */  "Unallocated",
/* 0xBC */  "Unallocated",
/* 0xBD */  "Unallocated",
/* 0xBE */  "Unallocated",
/* 0xBF */  "Unallocated",
/* 0xC0 */  "Unallocated",
/* 0xC1 */  "Unallocated",
/* 0xC2 */  "Unallocated",
/* 0xC3 */  "Unallocated",
/* 0xC4 */  "Unallocated",
/* 0xC5 */  "Unallocated",
/* 0xC6 */  "Unallocated",
/* 0xC7 */  "Unallocated",
/* 0xC8 */  "Unallocated",
/* 0xC9 */  "Unallocated",
/* 0xCA */  "Unallocated",
/* 0xCB */  "Unallocated",
/* 0xCC */  "Unallocated",
/* 0xCD */  "Unallocated",
/* 0xCE */  "Unallocated",
/* 0xCF */  "Unallocated",
/* 0xD0 */  "Unallocated",
/* 0xD1 */  "Unallocated",
/* 0xD2 */  "Unallocated",
/* 0xD3 */  "Unallocated",
/* 0xD4 */  "Unallocated",
/* 0xD5 */  "Unallocated",
/* 0xD6 */  "Unallocated",
/* 0xD7 */  "Unallocated",
/* 0xD8 */  "Unallocated",
/* 0xD9 */  "Unallocated",
/* 0xDA */  "Unallocated",
/* 0xDB */  "Unallocated",
/* 0xDC */  "Unallocated",
/* 0xDD */  "Unallocated",
/* 0xDE */  "Unallocated",
/* 0xDF */  "Unallocated",
/* 0xE0 */  "Unallocated",
/* 0xE1 */  "Unallocated",
/* 0xE2 */  "Unallocated",
/* 0xE3 */  "Unallocated",
/* 0xE4 */  "Unallocated",
/* 0xE5 */  "Unallocated",
/* 0xE6 */  "Unallocated",
/* 0xE7 */  "Unallocated",
/* 0xE8 */  "Unallocated",
/* 0xE9 */  "Unallocated",
/* 0xEA */  "Unallocated",
/* 0xEB */  "Unallocated",
/* 0xEC */  "Unallocated",
/* 0xED */  "Unallocated",
/* 0xEE */  "Unallocated",
/* 0xEF */  "Unallocated",
/* 0xF0 */  "Unallocated",
/* 0xF1 */  "Unallocated",
/* 0xF2 */  "Unallocated",
/* 0xF3 */  "Unallocated",
/* 0xF4 */  "Unallocated",
/* 0xF5 */  "Unallocated",
/* 0xF6 */  "Unallocated",
/* 0xF7 */  "Unallocated",
/* 0xF8 */  "Unallocated",
/* 0xF9 */  "Unallocated",
/* 0xFA */  "Unallocated",
/* 0xFB */  "Unallocated",
/* 0xFC */  "Unallocated",
/* 0xFD */  "Unallocated",
/* 0xFE */  "Unallocated",
/* 0xFF */  "Unallocated",
};


static const char * SFP_OPTION[16] = {
/* 0x64:bit7 */  "Unallocated",
/* 0x64:bit6 */  "Unallocated",
/* 0x64:bit5 */  "High Power Level Declaration (see SFF-8431 Addendum)",
/* 0x64:bit4 */  "Paging implemented indicator",
/* 0x64:bit3 */  "Retimer or CDR indicator",
/* 0x64:bit2 */  "Cooled Transceiver Declaration (see SFF-8431)",
/* 0x64:bit1 */  "Power Level Declaration (see SFF-8431)",
/* 0x64:bit0 */  "Linear Receiver Output Implemented (see SFF-8431)",
/* 0x65:bit7 */  "Receiver decision threshold implemented",
/* 0x65:bit6 */  "Tunable transmitter technology",
/* 0x65:bit5 */  "RATE_SELECT functionality is implemented",
/* 0x65:bit4 */  "TX_DISABLE is implemented and disables the high speed serial output",
/* 0x65:bit3 */  "TX_FAULT signal implemented",
/* 0x65:bit2 */  "Loss of Signal implemented, signal inverted from standard definition in SFP MSA (often called 'Signal Detect').",
/* 0x65:bit1 */  "Loss of Signal implemented, signal as defined in SFP MSA (often called 'Rx_LOS').",
/* 0x65:bit0 */  "Unallocated",
};
















#endif
